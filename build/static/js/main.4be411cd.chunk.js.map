{"version":3,"sources":["components/container/Navbar/Navbar.js","components/presentational/ProductCard/ProductCard.js","components/presentational/Loader/Loader.js","components/container/Home/Home.js","components/container/About/About.js","components/container/Cart/Cart.js","Routes.js","redux/reducer.js","App.js","redux/store.js","index.js"],"names":["Navbar","logout","axios","post","then","res","alert","data","message","props","history","go","catch","err","console","log","login","redirectURI","encodeURIComponent","window","location","origin","process","path","this","push","user","className","onClick","linkFunc","src","profile_picture","alt","nickname","Component","withRouter","connect","state","ProductCard","name","price","Loader","Home","products","loading","get","setState","length","map","product","key","id","About","sampleCartData","description","Cart","exact","component","initialState","App","dispatch","type","payload","Routes","createStore","action","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.4be411cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// Import css file for styling\r\nimport './Navbar.css';\r\n// import withRouter so, you can access this.props.history\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n// Import axios to be able to logout the user\r\nimport axios from 'axios';\r\n\r\nexport class Navbar extends Component {\r\n    // Define linkFunc so it redirects to specified route provided\r\n    linkFunc(path) {\r\n        this.props.history.push(path);\r\n    }\r\n    // Logout function that will logout hte user from the initialState\r\n    logout = () => {\r\n        // Pass a empty since you are just logging out the user \r\n        axios.post('/api/logout', {})\r\n            .then(res => {\r\n                // The will logout a user\r\n                alert(res.data.message);\r\n                // Reload the browser using this.props.history.go();\r\n                this.props.history.go();\r\n            }).catch(err => console.log('Logout Axios Error-------', err));\r\n    }\r\n    login = () => {\r\n        // Define your encodedURi since your are dealing with oAuth, so it can be secure, and oAuth and decode it\r\n        // Have your location origin, with your auth0 proxy which will be auth/calllback\r\n        const redirectURI = encodeURIComponent(`${window.location.origin}/auth/callback`);\r\n        // Redirect the user to your Auth0 domain, with the correct query parameters to retrieve code from auth0\r\n        window.location = `https://${process.env.REACT_APP_AUTH0_DOMAIN}/login?client=${process.env.REACT_APP_AUTH0_CLIENT_ID}&scope=openid%20profile%20email&redirect_uri=${redirectURI}`;\r\n    }\r\n    render() {\r\n        console.log(this.props.user);\r\n        return (\r\n            <div className='nav container'>\r\n                <div className='desktop-nav'>\r\n                    {/* Make sure every link uses linkFunc, except the login link. s*/}\r\n                    <p className=\"nav-link\" onClick={() => this.linkFunc('/')}>Home</p>\r\n                    <p className=\"nav-link\" onClick={() => this.linkFunc('/about')}>About</p>\r\n                    <p className=\"nav-link\" onClick={() => this.linkFunc('/cart')}>Cart</p>\r\n                    {/* Conditionally render the login button based if the user has data(it's login) else logout */}\r\n                    {/* Conditional render the user image if logged in. */}\r\n                    <div className=\"nav-link\" onClick={() => this.props.user ? this.logout() : this.login()} >\r\n                        {this.props.user ?\r\n                            <div>\r\n                                <p>Logout</p>\r\n                                <img className='user-image' src={this.props.user.profile_picture} alt={this.props.user.nickname} />\r\n                            </div>\r\n                            : <p>Login</p>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\n// Then wrap our Component with the HOC, and the connect double invoked\r\nexport default withRouter(connect(mapStateToProps)(Navbar));","import React from 'react';\r\n// Import the css file for styling\r\nimport './ProductCard.css';\r\n\r\n// Pass props to a stateless component as a argument\r\nconst ProductCard = (props) => {\r\n    const { name, price } = props;\r\n    return (\r\n        <div className='product-card container'>\r\n            <div>\r\n                <p className='product-card label'>{name}</p>\r\n                <p className='product-card label'>${price}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCard;","import React from 'react';\r\n//Import csss file.\r\nimport './Loader.css';\r\n\r\nconst Loader = (props) => {\r\n    return (\r\n        <div className=\"loader-div\">\r\n            <h3>Loading......</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\n// Import axios to call backend\r\nimport axios from 'axios';\r\n// Import the ProductCard that will be responsible for rendering each product\r\nimport ProductCard from '../../presentational/ProductCard/ProductCard';\r\n// Import the loader that is used when the data is being retrieved\r\nimport Loader from '../../presentational/Loader/Loader';\r\n// Import css file for styling\r\nimport './Home.css';\r\n\r\nexport default class Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            // Have a products and loading\r\n            // products holding all your products\r\n            products: [],\r\n            // loading for when loader is shown\r\n            // set it true, and when data is retrieve set to false.\r\n            loading: true\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axios.get('/api/products').then(res => {\r\n            // Always have console.logs for debugging\r\n            console.log('res.data products-----------', res.data);\r\n            ///// Set loading to false, and products to the res.data, since we are doing res.send in our backend\r\n            this.setState({ products: res.data, loading: false });\r\n            // Each .then must have a .catch to catch errors\r\n        }).catch(err => console.log('Read all products Error-------', err));\r\n    }\r\n    render() {\r\n        // Destruct the products, loading from state\r\n        const { products, loading } = this.state;\r\n        // If it's done loading return HTML otherwise return the loading indicator\r\n        if (!loading) {\r\n            return (\r\n                <div className='home container'>\r\n                    <div className='home-products container'>\r\n                        {/* If the products have data return products else return nothing using terinary statement */}\r\n                        {products.length ? products.map(product => <ProductCard key={product.id} {...product} />) : null}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            // Render Loader \r\n            return <Loader />\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n// Import the css file for styling\r\nimport './About.css';\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about container\">\r\n                <div className='about-info container'>\r\n                    <h1>About</h1>\r\n                    <p>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis ut justo in mauris lobortis bibendum nec nec tellus. Morbi est ipsum, pretium nec est vel, maximus congue metus. Proin eu euismod turpis, eget ornare nunc. Suspendisse id aliquet justo, eget ornare ligula. Nunc eu pretium nisi, vel maximus leo. Ut tempus risus quis ultricies dictum. Donec at mauris justo. Vestibulum ut lorem vitae tellus facilisis volutpat vitae quis purus. Suspendisse lobortis fermentum placerat.\r\n        </p>\r\n                    <p>\r\n                        Nam efficitur dui et urna ullamcorper rhoncus. Proin porta aliquet ipsum, ac volutpat diam auctor eu. Ut tristique odio ligula, ut aliquam ex consequat rutrum. In vel magna a velit rhoncus ornare. Phasellus arcu felis, consectetur non nunc nec, finibus rutrum libero. Nulla consequat lorem et felis semper, ut tempus orci lacinia. Sed molestie mi sodales lacinia scelerisque. Pellentesque tellus augue, molestie non sagittis sed, eleifend ac eros. Vivamus tortor quam, viverra sit amet libero a, dignissim auctor odio. In erat nulla, molestie a urna eu, porttitor euismod felis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque ipsum sapien, fermentum sit amet eleifend eget, consequat a lacus. Sed nulla odio, laoreet ut dictum sit amet, ornare quis augue. Nam blandit et metus ut vestibulum. Maecenas bibendum diam laoreet urna sollicitudin, in pellentesque diam condimentum.\r\n        </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n// Import the ProductCard component to display what is in the cart\r\nimport ProductCard from '../../presentational/ProductCard/ProductCard';\r\n// Import the css file for styling\r\nimport './Cart.css';\r\n\r\n// Define sample data for now to display in your cart.\r\nconst sampleCartData = [\r\n    { name: 'Test 1', description: 'Test Product 1', price: 20, id: 1 },\r\n    { name: 'Test 2', description: 'Test Product 2', price: 10, id: 2 },\r\n    { name: 'Test 3', description: 'Test Product 3', price: 30, id: 3 }\r\n]\r\n\r\nexport default class Cart extends Component {\r\n    render() {\r\n        return (\r\n            <div className='cart container'>\r\n                <div className='cart-info container'>\r\n                    <h2>Your Cart!</h2>\r\n                    <div>\r\n                        {sampleCartData.map(product => <ProductCard key={product.id} {...product} />)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// Import react becuase the Route itself is a component\r\nimport React from 'react';\r\n// Import the Route, and Switch Comopnent used for defining your routes\r\n// Route is the route itself which can accept render props, but for the purpose of this tutorial we used the component and path prop\r\n// Switch responsible for directing to first child that matches thier respective route\r\nimport { Route, Switch } from 'react-router-dom';\r\n// Now import the components you'll pass as props\r\nimport Home from './components/container/Home/Home';\r\nimport About from './components/container/About/About';\r\nimport Cart from './components/container/Cart/Cart';\r\n\r\n// When dealing with default exports we do not even need to name the export since when it is imported we can name it whatever we want\r\nexport default (\r\n    <Switch>\r\n        {/*Use the exact keyword means it will direct to that exact route, and used primarily when creating sub routes. */}\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/about' component={About} />\r\n        <Route path='/cart' component={Cart} />\r\n    </Switch>\r\n)","// Define initialState that will be used for the reducer\r\nconst initialState = {\r\n    user: null\r\n}\r\n\r\n// Define action types\r\nconst LOGIN = \"LOGIN\";\r\nconst LOGOUT = \"LOGOUT\";\r\n\r\n// When doing a default export with a reducer which is essentially a function with a state and action argument, with the state default set to initialState\r\nexport default (state = initialState, action) => {\r\n    // Do a switch statement on the action.type, and set the state base on the action's type \r\n    switch (action.type) {\r\n        // Have the login action type that will set the initialState user property to the action's payload\r\n        case LOGIN:\r\n            // Use the spread to pass in the values of the initialState, and set the new property user\r\n            return { ...state, user: action.payload };\r\n        // Have the logout action type that will set the initialState user property to null when user's logs out\r\n        case LOGOUT:\r\n            // Use the spread to pass in the values of the initialState, and set the new property user to it's default value(null)      \r\n            return { ...state, user: null };\r\n        default:\r\n            // If there is not action type return the state by default\r\n            return state;\r\n    }\r\n}\r\n\r\n// Export the function that will login the user to it's initialState\r\nexport const login = (userInfo) => {\r\n    return {\r\n        type: LOGIN,\r\n        payload: userInfo\r\n    }\r\n}\r\n\r\n// Export the function that will logs the user out from state\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT\r\n    }\r\n}","import React, { Component } from 'react';\r\n// Add Navbar to all pages\r\nimport Navbar from './components/container/Navbar/Navbar';\r\n// import Home from'./components/container/Home/Home';\r\nimport Routes from './Routes';\r\n// Import withROuter since using redux and want app to have access to this.props.history\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n// Import actions that will be implemented in your reducer\r\nimport { login, logout } from './redux/reducer';\r\n// import axios to get your user session from your backend\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  // Get the session in componentDidMount, and if it has data set intialState user to it\r\n  componentDidMount() {\r\n    axios.get('/api/user-data')\r\n    .then(res => {\r\n      const { dispatch } = this.props;\r\n      if (res.data.user) {\r\n        //Dispatch the login function with the user data. \r\n        dispatch(login(res.data.user));\r\n        //Else logout the user from the intialState.\r\n      } else {\r\n        //Dispatch the logout the user by default if there is no data in session.\r\n        dispatch(logout());\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        {Routes}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Then connect app to reducer\r\nexport default withRouter(connect()(App));","// Import the reducer to export it with the reducer\r\nimport reducer from './reducer';\r\n// Import createStore that will create a store from redux\r\nimport { createStore } from 'redux';\r\n\r\n// Export the reducer with redux devtools \r\nexport default createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n// Now import your Router for your routes and wrap your app in it\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(<Provider store={store}><BrowserRouter><App /></BrowserRouter></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();"],"sourceRoot":""}